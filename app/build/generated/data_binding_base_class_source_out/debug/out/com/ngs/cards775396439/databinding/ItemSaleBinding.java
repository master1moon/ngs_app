// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSaleBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDeleteSale;

  @NonNull
  public final MaterialButton btnEditSale;

  @NonNull
  public final TextView tvPricePerUnit;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvSaleDate;

  @NonNull
  public final TextView tvSaleReason;

  @NonNull
  public final TextView tvStoreAndPackage;

  @NonNull
  public final TextView tvTotalAmount;

  private ItemSaleBinding(@NonNull MaterialCardView rootView, @NonNull MaterialButton btnDeleteSale,
      @NonNull MaterialButton btnEditSale, @NonNull TextView tvPricePerUnit,
      @NonNull TextView tvQuantity, @NonNull TextView tvSaleDate, @NonNull TextView tvSaleReason,
      @NonNull TextView tvStoreAndPackage, @NonNull TextView tvTotalAmount) {
    this.rootView = rootView;
    this.btnDeleteSale = btnDeleteSale;
    this.btnEditSale = btnEditSale;
    this.tvPricePerUnit = tvPricePerUnit;
    this.tvQuantity = tvQuantity;
    this.tvSaleDate = tvSaleDate;
    this.tvSaleReason = tvSaleReason;
    this.tvStoreAndPackage = tvStoreAndPackage;
    this.tvTotalAmount = tvTotalAmount;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSaleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSaleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_sale, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSaleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteSale;
      MaterialButton btnDeleteSale = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteSale == null) {
        break missingId;
      }

      id = R.id.btnEditSale;
      MaterialButton btnEditSale = ViewBindings.findChildViewById(rootView, id);
      if (btnEditSale == null) {
        break missingId;
      }

      id = R.id.tvPricePerUnit;
      TextView tvPricePerUnit = ViewBindings.findChildViewById(rootView, id);
      if (tvPricePerUnit == null) {
        break missingId;
      }

      id = R.id.tvQuantity;
      TextView tvQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantity == null) {
        break missingId;
      }

      id = R.id.tvSaleDate;
      TextView tvSaleDate = ViewBindings.findChildViewById(rootView, id);
      if (tvSaleDate == null) {
        break missingId;
      }

      id = R.id.tvSaleReason;
      TextView tvSaleReason = ViewBindings.findChildViewById(rootView, id);
      if (tvSaleReason == null) {
        break missingId;
      }

      id = R.id.tvStoreAndPackage;
      TextView tvStoreAndPackage = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreAndPackage == null) {
        break missingId;
      }

      id = R.id.tvTotalAmount;
      TextView tvTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvTotalAmount == null) {
        break missingId;
      }

      return new ItemSaleBinding((MaterialCardView) rootView, btnDeleteSale, btnEditSale,
          tvPricePerUnit, tvQuantity, tvSaleDate, tvSaleReason, tvStoreAndPackage, tvTotalAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
