// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPaymentBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDeletePayment;

  @NonNull
  public final MaterialButton btnEditPayment;

  @NonNull
  public final TextView tvPaymentAmount;

  @NonNull
  public final TextView tvPaymentDate;

  @NonNull
  public final TextView tvPaymentNotes;

  @NonNull
  public final TextView tvStoreName;

  private ItemPaymentBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDeletePayment, @NonNull MaterialButton btnEditPayment,
      @NonNull TextView tvPaymentAmount, @NonNull TextView tvPaymentDate,
      @NonNull TextView tvPaymentNotes, @NonNull TextView tvStoreName) {
    this.rootView = rootView;
    this.btnDeletePayment = btnDeletePayment;
    this.btnEditPayment = btnEditPayment;
    this.tvPaymentAmount = tvPaymentAmount;
    this.tvPaymentDate = tvPaymentDate;
    this.tvPaymentNotes = tvPaymentNotes;
    this.tvStoreName = tvStoreName;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPaymentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPaymentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_payment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPaymentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeletePayment;
      MaterialButton btnDeletePayment = ViewBindings.findChildViewById(rootView, id);
      if (btnDeletePayment == null) {
        break missingId;
      }

      id = R.id.btnEditPayment;
      MaterialButton btnEditPayment = ViewBindings.findChildViewById(rootView, id);
      if (btnEditPayment == null) {
        break missingId;
      }

      id = R.id.tvPaymentAmount;
      TextView tvPaymentAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentAmount == null) {
        break missingId;
      }

      id = R.id.tvPaymentDate;
      TextView tvPaymentDate = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentDate == null) {
        break missingId;
      }

      id = R.id.tvPaymentNotes;
      TextView tvPaymentNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvPaymentNotes == null) {
        break missingId;
      }

      id = R.id.tvStoreName;
      TextView tvStoreName = ViewBindings.findChildViewById(rootView, id);
      if (tvStoreName == null) {
        break missingId;
      }

      return new ItemPaymentBinding((MaterialCardView) rootView, btnDeletePayment, btnEditPayment,
          tvPaymentAmount, tvPaymentDate, tvPaymentNotes, tvStoreName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
