// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSalesBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout emptyState;

  @NonNull
  public final FloatingActionButton fabAddSale;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvSales;

  private FragmentSalesBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout emptyState, @NonNull FloatingActionButton fabAddSale,
      @NonNull ProgressBar progressBar, @NonNull RecyclerView rvSales) {
    this.rootView = rootView;
    this.emptyState = emptyState;
    this.fabAddSale = fabAddSale;
    this.progressBar = progressBar;
    this.rvSales = rvSales;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSalesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSalesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_sales, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSalesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyState;
      LinearLayout emptyState = ViewBindings.findChildViewById(rootView, id);
      if (emptyState == null) {
        break missingId;
      }

      id = R.id.fabAddSale;
      FloatingActionButton fabAddSale = ViewBindings.findChildViewById(rootView, id);
      if (fabAddSale == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvSales;
      RecyclerView rvSales = ViewBindings.findChildViewById(rootView, id);
      if (rvSales == null) {
        break missingId;
      }

      return new FragmentSalesBinding((CoordinatorLayout) rootView, emptyState, fabAddSale,
          progressBar, rvSales);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
