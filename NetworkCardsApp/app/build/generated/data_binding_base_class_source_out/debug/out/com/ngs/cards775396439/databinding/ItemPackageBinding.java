// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPackageBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDeletePackage;

  @NonNull
  public final MaterialButton btnEditPackage;

  @NonNull
  public final TextView tvCreatedDate;

  @NonNull
  public final TextView tvDistributorPrice;

  @NonNull
  public final TextView tvPackageName;

  @NonNull
  public final TextView tvRetailPrice;

  @NonNull
  public final TextView tvWholesalePrice;

  private ItemPackageBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDeletePackage, @NonNull MaterialButton btnEditPackage,
      @NonNull TextView tvCreatedDate, @NonNull TextView tvDistributorPrice,
      @NonNull TextView tvPackageName, @NonNull TextView tvRetailPrice,
      @NonNull TextView tvWholesalePrice) {
    this.rootView = rootView;
    this.btnDeletePackage = btnDeletePackage;
    this.btnEditPackage = btnEditPackage;
    this.tvCreatedDate = tvCreatedDate;
    this.tvDistributorPrice = tvDistributorPrice;
    this.tvPackageName = tvPackageName;
    this.tvRetailPrice = tvRetailPrice;
    this.tvWholesalePrice = tvWholesalePrice;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPackageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPackageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_package, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPackageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeletePackage;
      MaterialButton btnDeletePackage = ViewBindings.findChildViewById(rootView, id);
      if (btnDeletePackage == null) {
        break missingId;
      }

      id = R.id.btnEditPackage;
      MaterialButton btnEditPackage = ViewBindings.findChildViewById(rootView, id);
      if (btnEditPackage == null) {
        break missingId;
      }

      id = R.id.tvCreatedDate;
      TextView tvCreatedDate = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatedDate == null) {
        break missingId;
      }

      id = R.id.tvDistributorPrice;
      TextView tvDistributorPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorPrice == null) {
        break missingId;
      }

      id = R.id.tvPackageName;
      TextView tvPackageName = ViewBindings.findChildViewById(rootView, id);
      if (tvPackageName == null) {
        break missingId;
      }

      id = R.id.tvRetailPrice;
      TextView tvRetailPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvRetailPrice == null) {
        break missingId;
      }

      id = R.id.tvWholesalePrice;
      TextView tvWholesalePrice = ViewBindings.findChildViewById(rootView, id);
      if (tvWholesalePrice == null) {
        break missingId;
      }

      return new ItemPackageBinding((MaterialCardView) rootView, btnDeletePackage, btnEditPackage,
          tvCreatedDate, tvDistributorPrice, tvPackageName, tvRetailPrice, tvWholesalePrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
