// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemInventoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDelete;

  @NonNull
  public final MaterialButton btnEdit;

  @NonNull
  public final TextView tvCreatedAt;

  @NonNull
  public final TextView tvDistributorValue;

  @NonNull
  public final TextView tvPackageName;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvRetailValue;

  @NonNull
  public final TextView tvWholesaleValue;

  private ItemInventoryBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDelete, @NonNull MaterialButton btnEdit,
      @NonNull TextView tvCreatedAt, @NonNull TextView tvDistributorValue,
      @NonNull TextView tvPackageName, @NonNull TextView tvQuantity,
      @NonNull TextView tvRetailValue, @NonNull TextView tvWholesaleValue) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.tvCreatedAt = tvCreatedAt;
    this.tvDistributorValue = tvDistributorValue;
    this.tvPackageName = tvPackageName;
    this.tvQuantity = tvQuantity;
    this.tvRetailValue = tvRetailValue;
    this.tvWholesaleValue = tvWholesaleValue;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      MaterialButton btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      MaterialButton btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.tvCreatedAt;
      TextView tvCreatedAt = ViewBindings.findChildViewById(rootView, id);
      if (tvCreatedAt == null) {
        break missingId;
      }

      id = R.id.tvDistributorValue;
      TextView tvDistributorValue = ViewBindings.findChildViewById(rootView, id);
      if (tvDistributorValue == null) {
        break missingId;
      }

      id = R.id.tvPackageName;
      TextView tvPackageName = ViewBindings.findChildViewById(rootView, id);
      if (tvPackageName == null) {
        break missingId;
      }

      id = R.id.tvQuantity;
      TextView tvQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantity == null) {
        break missingId;
      }

      id = R.id.tvRetailValue;
      TextView tvRetailValue = ViewBindings.findChildViewById(rootView, id);
      if (tvRetailValue == null) {
        break missingId;
      }

      id = R.id.tvWholesaleValue;
      TextView tvWholesaleValue = ViewBindings.findChildViewById(rootView, id);
      if (tvWholesaleValue == null) {
        break missingId;
      }

      return new ItemInventoryBinding((MaterialCardView) rootView, btnDelete, btnEdit, tvCreatedAt,
          tvDistributorValue, tvPackageName, tvQuantity, tvRetailValue, tvWholesaleValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
