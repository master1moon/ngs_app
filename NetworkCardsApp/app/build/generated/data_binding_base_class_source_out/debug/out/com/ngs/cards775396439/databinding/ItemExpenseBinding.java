// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExpenseBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialButton btnDeleteExpense;

  @NonNull
  public final MaterialButton btnEditExpense;

  @NonNull
  public final TextView tvExpenseAmount;

  @NonNull
  public final TextView tvExpenseDate;

  @NonNull
  public final TextView tvExpenseNotes;

  @NonNull
  public final TextView tvExpenseType;

  private ItemExpenseBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialButton btnDeleteExpense, @NonNull MaterialButton btnEditExpense,
      @NonNull TextView tvExpenseAmount, @NonNull TextView tvExpenseDate,
      @NonNull TextView tvExpenseNotes, @NonNull TextView tvExpenseType) {
    this.rootView = rootView;
    this.btnDeleteExpense = btnDeleteExpense;
    this.btnEditExpense = btnEditExpense;
    this.tvExpenseAmount = tvExpenseAmount;
    this.tvExpenseDate = tvExpenseDate;
    this.tvExpenseNotes = tvExpenseNotes;
    this.tvExpenseType = tvExpenseType;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteExpense;
      MaterialButton btnDeleteExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteExpense == null) {
        break missingId;
      }

      id = R.id.btnEditExpense;
      MaterialButton btnEditExpense = ViewBindings.findChildViewById(rootView, id);
      if (btnEditExpense == null) {
        break missingId;
      }

      id = R.id.tvExpenseAmount;
      TextView tvExpenseAmount = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseAmount == null) {
        break missingId;
      }

      id = R.id.tvExpenseDate;
      TextView tvExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseDate == null) {
        break missingId;
      }

      id = R.id.tvExpenseNotes;
      TextView tvExpenseNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseNotes == null) {
        break missingId;
      }

      id = R.id.tvExpenseType;
      TextView tvExpenseType = ViewBindings.findChildViewById(rootView, id);
      if (tvExpenseType == null) {
        break missingId;
      }

      return new ItemExpenseBinding((MaterialCardView) rootView, btnDeleteExpense, btnEditExpense,
          tvExpenseAmount, tvExpenseDate, tvExpenseNotes, tvExpenseType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
