// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogInventoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final TextInputEditText etInventoryDate;

  @NonNull
  public final TextInputEditText etQuantity;

  @NonNull
  public final Spinner spinnerPackage;

  @NonNull
  public final TextView tvTitle;

  private DialogInventoryBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnCancel,
      @NonNull MaterialButton btnSave, @NonNull TextInputEditText etInventoryDate,
      @NonNull TextInputEditText etQuantity, @NonNull Spinner spinnerPackage,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.etInventoryDate = etInventoryDate;
    this.etQuantity = etQuantity;
    this.spinnerPackage = spinnerPackage;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogInventoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogInventoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_inventory, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogInventoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etInventoryDate;
      TextInputEditText etInventoryDate = ViewBindings.findChildViewById(rootView, id);
      if (etInventoryDate == null) {
        break missingId;
      }

      id = R.id.etQuantity;
      TextInputEditText etQuantity = ViewBindings.findChildViewById(rootView, id);
      if (etQuantity == null) {
        break missingId;
      }

      id = R.id.spinnerPackage;
      Spinner spinnerPackage = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPackage == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogInventoryBinding((LinearLayout) rootView, btnCancel, btnSave,
          etInventoryDate, etQuantity, spinnerPackage, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
