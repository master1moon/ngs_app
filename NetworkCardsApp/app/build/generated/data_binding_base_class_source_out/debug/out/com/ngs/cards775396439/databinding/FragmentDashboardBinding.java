// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView netProfit;

  @NonNull
  public final TextView packagesCount;

  @NonNull
  public final RecyclerView recentPackagesRecycler;

  @NonNull
  public final RecyclerView recentStoresRecycler;

  @NonNull
  public final TextView storesCount;

  @NonNull
  public final TextView totalCards;

  @NonNull
  public final TextView totalSales;

  private FragmentDashboardBinding(@NonNull ScrollView rootView, @NonNull TextView netProfit,
      @NonNull TextView packagesCount, @NonNull RecyclerView recentPackagesRecycler,
      @NonNull RecyclerView recentStoresRecycler, @NonNull TextView storesCount,
      @NonNull TextView totalCards, @NonNull TextView totalSales) {
    this.rootView = rootView;
    this.netProfit = netProfit;
    this.packagesCount = packagesCount;
    this.recentPackagesRecycler = recentPackagesRecycler;
    this.recentStoresRecycler = recentStoresRecycler;
    this.storesCount = storesCount;
    this.totalCards = totalCards;
    this.totalSales = totalSales;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.net_profit;
      TextView netProfit = ViewBindings.findChildViewById(rootView, id);
      if (netProfit == null) {
        break missingId;
      }

      id = R.id.packages_count;
      TextView packagesCount = ViewBindings.findChildViewById(rootView, id);
      if (packagesCount == null) {
        break missingId;
      }

      id = R.id.recent_packages_recycler;
      RecyclerView recentPackagesRecycler = ViewBindings.findChildViewById(rootView, id);
      if (recentPackagesRecycler == null) {
        break missingId;
      }

      id = R.id.recent_stores_recycler;
      RecyclerView recentStoresRecycler = ViewBindings.findChildViewById(rootView, id);
      if (recentStoresRecycler == null) {
        break missingId;
      }

      id = R.id.stores_count;
      TextView storesCount = ViewBindings.findChildViewById(rootView, id);
      if (storesCount == null) {
        break missingId;
      }

      id = R.id.total_cards;
      TextView totalCards = ViewBindings.findChildViewById(rootView, id);
      if (totalCards == null) {
        break missingId;
      }

      id = R.id.total_sales;
      TextView totalSales = ViewBindings.findChildViewById(rootView, id);
      if (totalSales == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ScrollView) rootView, netProfit, packagesCount,
          recentPackagesRecycler, recentStoresRecycler, storesCount, totalCards, totalSales);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
