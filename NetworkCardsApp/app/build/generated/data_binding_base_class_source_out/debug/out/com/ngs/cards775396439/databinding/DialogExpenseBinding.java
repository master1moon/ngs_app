// Generated by view binder compiler. Do not edit!
package com.ngs.cards775396439.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputEditText;
import com.ngs.cards775396439.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExpenseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnCancel;

  @NonNull
  public final MaterialButton btnSave;

  @NonNull
  public final MaterialCheckBox cbAddLater;

  @NonNull
  public final TextInputEditText etAmount;

  @NonNull
  public final TextInputEditText etExpenseDate;

  @NonNull
  public final TextInputEditText etNotes;

  @NonNull
  public final Spinner spinnerExpenseType;

  @NonNull
  public final TextView tvTitle;

  private DialogExpenseBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton btnCancel,
      @NonNull MaterialButton btnSave, @NonNull MaterialCheckBox cbAddLater,
      @NonNull TextInputEditText etAmount, @NonNull TextInputEditText etExpenseDate,
      @NonNull TextInputEditText etNotes, @NonNull Spinner spinnerExpenseType,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnSave = btnSave;
    this.cbAddLater = cbAddLater;
    this.etAmount = etAmount;
    this.etExpenseDate = etExpenseDate;
    this.etNotes = etNotes;
    this.spinnerExpenseType = spinnerExpenseType;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancel;
      MaterialButton btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      MaterialButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.cbAddLater;
      MaterialCheckBox cbAddLater = ViewBindings.findChildViewById(rootView, id);
      if (cbAddLater == null) {
        break missingId;
      }

      id = R.id.etAmount;
      TextInputEditText etAmount = ViewBindings.findChildViewById(rootView, id);
      if (etAmount == null) {
        break missingId;
      }

      id = R.id.etExpenseDate;
      TextInputEditText etExpenseDate = ViewBindings.findChildViewById(rootView, id);
      if (etExpenseDate == null) {
        break missingId;
      }

      id = R.id.etNotes;
      TextInputEditText etNotes = ViewBindings.findChildViewById(rootView, id);
      if (etNotes == null) {
        break missingId;
      }

      id = R.id.spinnerExpenseType;
      Spinner spinnerExpenseType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerExpenseType == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogExpenseBinding((LinearLayout) rootView, btnCancel, btnSave, cbAddLater,
          etAmount, etExpenseDate, etNotes, spinnerExpenseType, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
